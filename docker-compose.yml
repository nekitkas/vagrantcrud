services:
  gateway-app:
    build: ./srcs/api-gateway
    restart: always
    environment:
        API_GATEWAY_PORT: ${API_GATEWAY_PORT}
        INVENTORY_APP_PORT: ${INVENTORY_APP_PORT}
        INVENTORY_APP_HOST: inventory-app
        BILLING_APP_PORT: ${BILLING_APP_PORT}
        BILLING_APP_HOST: billing-app
        RABBITMQ_PORT: ${RABBITMQ_PORT}
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: ${RABBITMQ_USER}
        RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    depends_on:
      - inventory-app
      - billing-app
      - rabbitmq

  inventory-app:
    build:
        context: ./srcs/inventory-app
        dockerfile: Dockerfile
    restart: always
    environment:
        INVENTORY_DB_HOST: inventory-db
        INVENTORY_DB_USER: ${INVENTORY_DB_USER}
        INVENTORY_DB_PASSWORD: ${INVENTORY_DB_PASSWORD}
        INVENTORY_DB_NAME: ${INVENTORY_DB_NAME}
        INVENTORY_APP_PORT: ${INVENTORY_APP_PORT}
    depends_on:
      - inventory-db

  inventory-db:
    build:
        context: .
        dockerfile: db.Dockerfile
    restart: always
    volumes:
      - inventory-db-data:/var/lib/postgresql/data
    environment:
        POSTGRES_USER: ${INVENTORY_DB_USER}
        POSTGRES_PASSWORD: ${INVENTORY_DB_PASSWORD}
        POSTGRES_DB: ${INVENTORY_DB_NAME}

  billing-app:
    build: ./srcs/billing-app
    restart: always
    environment:
        BILLING_DB_HOST: billing-db
        BILLING_DB_USER: ${BILLING_DB_USER}
        BILLING_DB_PASSWORD: ${BILLING_DB_PASSWORD}
        BILLING_DB_NAME: ${BILLING_DB_NAME}
        BILLING_APP_PORT: ${BILLING_APP_PORT}
        RABBITMQ_PORT: ${RABBITMQ_PORT}
        RABBITMQ_HOST: rabbitmq
        RABBITMQ_USER: ${RABBITMQ_USER}
        RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      rabbitmq:
        condition: service_healthy

  billing-db:
    build:
        context: .
        dockerfile: db.Dockerfile
    restart: always
    volumes:
        - billing-db-data:/var/lib/postgresql/data
    environment:
        POSTGRES_USER: ${BILLING_DB_USER}
        POSTGRES_PASSWORD: ${BILLING_DB_PASSWORD}
        POSTGRES_DB: ${BILLING_DB_NAME}

  rabbitmq:
    restart: always
    build:
        context: .
        dockerfile: rabbitmq.Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
        RABBITMQ_PORT: ${RABBITMQ_PORT}
        RABBITMQ_USER: ${RABBITMQ_USER}
        RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  inventory-db-data:
  billing-db-data:
  api-gateway-logs:


